//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public ResourceTypeListenerComponent ResourceTypeListener { get { return (ResourceTypeListenerComponent)GetComponent(GameComponentsLookup.ResourceTypeListener); } }
	public bool HasResourceTypeListener { get { return HasComponent(GameComponentsLookup.ResourceTypeListener); } }

	public void AddResourceTypeListener()
	{
		var index = GameComponentsLookup.ResourceTypeListener;
		var component = (ResourceTypeListenerComponent)CreateComponent(index, typeof(ResourceTypeListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceResourceTypeListener()
	{
		ReplaceComponent(GameComponentsLookup.ResourceTypeListener, ResourceTypeListener);
	}

	public void RemoveResourceTypeListener()
	{
		RemoveComponent(GameComponentsLookup.ResourceTypeListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherResourceTypeListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> ResourceTypeListener
	{
		get
		{
			if (_matcherResourceTypeListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.ResourceTypeListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherResourceTypeListener = matcher;
			}

			return _matcherResourceTypeListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeResourceType(OnGameResourceType value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasResourceTypeListener
			? ResourceTypeListener
			: (ResourceTypeListenerComponent)CreateComponent(GameComponentsLookup.ResourceTypeListener, typeof(ResourceTypeListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.ResourceTypeListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.ResourceType))
		{
			var component = ResourceType;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameResourceType>(CreationIndex, value, UnsubscribeResourceType);
	}

	private void UnsubscribeResourceType(int creationIndex, OnGameResourceType value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.ResourceTypeListener;
		var component = ResourceTypeListener;
		component.Delegate -= value;
		if (ResourceTypeListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
