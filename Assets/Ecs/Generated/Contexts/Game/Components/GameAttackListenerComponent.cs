//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public AttackListenerComponent AttackListener { get { return (AttackListenerComponent)GetComponent(GameComponentsLookup.AttackListener); } }
	public bool HasAttackListener { get { return HasComponent(GameComponentsLookup.AttackListener); } }

	public void AddAttackListener()
	{
		var index = GameComponentsLookup.AttackListener;
		var component = (AttackListenerComponent)CreateComponent(index, typeof(AttackListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceAttackListener()
	{
		ReplaceComponent(GameComponentsLookup.AttackListener, AttackListener);
	}

	public void RemoveAttackListener()
	{
		RemoveComponent(GameComponentsLookup.AttackListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherAttackListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> AttackListener
	{
		get
		{
			if (_matcherAttackListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherAttackListener = matcher;
			}

			return _matcherAttackListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeAttack(OnGameAttack value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasAttackListener
			? AttackListener
			: (AttackListenerComponent)CreateComponent(GameComponentsLookup.AttackListener, typeof(AttackListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.AttackListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Attack))
		{
			var component = Attack;
			value(this, component.Uid);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameAttack>(CreationIndex, value, UnsubscribeAttack);
	}

	private void UnsubscribeAttack(int creationIndex, OnGameAttack value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.AttackListener;
		var component = AttackListener;
		component.Delegate -= value;
		if (AttackListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
