//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public SpeedListenerComponent SpeedListener { get { return (SpeedListenerComponent)GetComponent(GameComponentsLookup.SpeedListener); } }
	public bool HasSpeedListener { get { return HasComponent(GameComponentsLookup.SpeedListener); } }

	public void AddSpeedListener()
	{
		var index = GameComponentsLookup.SpeedListener;
		var component = (SpeedListenerComponent)CreateComponent(index, typeof(SpeedListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceSpeedListener()
	{
		ReplaceComponent(GameComponentsLookup.SpeedListener, SpeedListener);
	}

	public void RemoveSpeedListener()
	{
		RemoveComponent(GameComponentsLookup.SpeedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherSpeedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> SpeedListener
	{
		get
		{
			if (_matcherSpeedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpeedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherSpeedListener = matcher;
			}

			return _matcherSpeedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeSpeed(OnGameSpeed value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasSpeedListener
			? SpeedListener
			: (SpeedListenerComponent)CreateComponent(GameComponentsLookup.SpeedListener, typeof(SpeedListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.SpeedListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Speed))
		{
			var component = Speed;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameSpeed>(CreationIndex, value, UnsubscribeSpeed);
	}

	private void UnsubscribeSpeed(int creationIndex, OnGameSpeed value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.SpeedListener;
		var component = SpeedListener;
		component.Delegate -= value;
		if (SpeedListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
