//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public GameStateListenerComponent GameStateListener { get { return (GameStateListenerComponent)GetComponent(GameComponentsLookup.GameStateListener); } }
	public bool HasGameStateListener { get { return HasComponent(GameComponentsLookup.GameStateListener); } }

	public void AddGameStateListener()
	{
		var index = GameComponentsLookup.GameStateListener;
		var component = (GameStateListenerComponent)CreateComponent(index, typeof(GameStateListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceGameStateListener()
	{
		ReplaceComponent(GameComponentsLookup.GameStateListener, GameStateListener);
	}

	public void RemoveGameStateListener()
	{
		RemoveComponent(GameComponentsLookup.GameStateListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherGameStateListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> GameStateListener
	{
		get
		{
			if (_matcherGameStateListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameStateListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherGameStateListener = matcher;
			}

			return _matcherGameStateListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeGameState(OnGameGameState value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasGameStateListener
			? GameStateListener
			: (GameStateListenerComponent)CreateComponent(GameComponentsLookup.GameStateListener, typeof(GameStateListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.GameStateListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.GameState))
		{
			var component = GameState;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameGameState>(CreationIndex, value, UnsubscribeGameState);
	}

	private void UnsubscribeGameState(int creationIndex, OnGameGameState value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.GameStateListener;
		var component = GameStateListener;
		component.Delegate -= value;
		if (GameStateListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
