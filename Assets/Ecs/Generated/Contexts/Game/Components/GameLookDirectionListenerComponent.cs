//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public LookDirectionListenerComponent LookDirectionListener { get { return (LookDirectionListenerComponent)GetComponent(GameComponentsLookup.LookDirectionListener); } }
	public bool HasLookDirectionListener { get { return HasComponent(GameComponentsLookup.LookDirectionListener); } }

	public void AddLookDirectionListener()
	{
		var index = GameComponentsLookup.LookDirectionListener;
		var component = (LookDirectionListenerComponent)CreateComponent(index, typeof(LookDirectionListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceLookDirectionListener()
	{
		ReplaceComponent(GameComponentsLookup.LookDirectionListener, LookDirectionListener);
	}

	public void RemoveLookDirectionListener()
	{
		RemoveComponent(GameComponentsLookup.LookDirectionListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherLookDirectionListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> LookDirectionListener
	{
		get
		{
			if (_matcherLookDirectionListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.LookDirectionListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherLookDirectionListener = matcher;
			}

			return _matcherLookDirectionListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeLookDirection(OnGameLookDirection value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasLookDirectionListener
			? LookDirectionListener
			: (LookDirectionListenerComponent)CreateComponent(GameComponentsLookup.LookDirectionListener, typeof(LookDirectionListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.LookDirectionListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.LookDirection))
		{
			var component = LookDirection;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameLookDirection>(CreationIndex, value, UnsubscribeLookDirection);
	}

	private void UnsubscribeLookDirection(int creationIndex, OnGameLookDirection value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.LookDirectionListener;
		var component = LookDirectionListener;
		component.Delegate -= value;
		if (LookDirectionListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
