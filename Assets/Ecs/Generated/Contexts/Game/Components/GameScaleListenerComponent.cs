//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public ScaleListenerComponent ScaleListener { get { return (ScaleListenerComponent)GetComponent(GameComponentsLookup.ScaleListener); } }
	public bool HasScaleListener { get { return HasComponent(GameComponentsLookup.ScaleListener); } }

	public void AddScaleListener()
	{
		var index = GameComponentsLookup.ScaleListener;
		var component = (ScaleListenerComponent)CreateComponent(index, typeof(ScaleListenerComponent));
		AddComponent(index, component);
	}

	public void ReplaceScaleListener()
	{
		ReplaceComponent(GameComponentsLookup.ScaleListener, ScaleListener);
	}

	public void RemoveScaleListener()
	{
		RemoveComponent(GameComponentsLookup.ScaleListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherScaleListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> ScaleListener
	{
		get
		{
			if (_matcherScaleListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScaleListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherScaleListener = matcher;
			}

			return _matcherScaleListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public System.IDisposable SubscribeScale(OnGameScale value, bool invokeOnSubscribe = true)
	{
		var componentListener = HasScaleListener
			? ScaleListener
			: (ScaleListenerComponent)CreateComponent(GameComponentsLookup.ScaleListener, typeof(ScaleListenerComponent));
		componentListener.Delegate += value;
		ReplaceComponent(GameComponentsLookup.ScaleListener, componentListener);
		if(invokeOnSubscribe && HasComponent(GameComponentsLookup.Scale))
		{
			var component = Scale;
			value(this, component.Value);
		}

		return new JCMG.EntitasRedux.Events.EventDisposable<OnGameScale>(CreationIndex, value, UnsubscribeScale);
	}

	private void UnsubscribeScale(int creationIndex, OnGameScale value)
	{
		if(!IsEnabled || CreationIndex != creationIndex)
			return;

		var index = GameComponentsLookup.ScaleListener;
		var component = ScaleListener;
		component.Delegate -= value;
		if (ScaleListener.IsEmpty)
		{
			RemoveComponent(index);
		}
		else
		{
			ReplaceComponent(index, component);
		}
	}
}
