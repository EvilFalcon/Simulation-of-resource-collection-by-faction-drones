//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using JCMG.EntitasRedux;

public static class GameComponentsLookup
{
	public const int AttackListener = 0;
	public const int DeadListener = 1;
	public const int DeadRemovedListener = 2;
	public const int CorePrefab = 3;
	public const int Destroyed = 4;
	public const int Instantiate = 5;
	public const int Link = 6;
	public const int ResourcePrefab = 7;
	public const int UnitPrefab = 8;
	public const int Attack = 9;
	public const int Camera = 10;
	public const int Dead = 11;
	public const int FractionResources = 12;
	public const int FractionType = 13;
	public const int GameState = 14;
	public const int Active = 15;
	public const int LocalPosition = 16;
	public const int NavMeshAgent = 17;
	public const int Position = 18;
	public const int Rotation = 19;
	public const int Scale = 20;
	public const int Transform = 21;
	public const int Uid = 22;
	public const int LookDirection = 23;
	public const int LookPoint = 24;
	public const int Player = 25;
	public const int Resource = 26;
	public const int ResourceData = 27;
	public const int SpawnHistory = 28;
	public const int Speed = 29;
	public const int TerrainBounds = 30;
	public const int Terrain = 31;
	public const int TerrainData = 32;
	public const int Ray = 33;
	public const int UnitFraction = 34;
	public const int Velocity = 35;
	public const int LocalTimeScale = 36;
	public const int FractionResourcesListener = 37;
	public const int GameDestroyedListener = 38;
	public const int GameStateListener = 39;
	public const int LocalPositionListener = 40;
	public const int LocalTimeScaleListener = 41;
	public const int LookDirectionListener = 42;
	public const int PositionListener = 43;
	public const int RotationListener = 44;
	public const int ScaleListener = 45;
	public const int SpeedListener = 46;
	public const int VelocityListener = 47;

	public const int TotalComponents = 48;

	public static readonly string[] ComponentNames =
	{
		"AttackListener",
		"DeadListener",
		"DeadRemovedListener",
		"CorePrefab",
		"Destroyed",
		"Instantiate",
		"Link",
		"ResourcePrefab",
		"UnitPrefab",
		"Attack",
		"Camera",
		"Dead",
		"FractionResources",
		"FractionType",
		"GameState",
		"Active",
		"LocalPosition",
		"NavMeshAgent",
		"Position",
		"Rotation",
		"Scale",
		"Transform",
		"Uid",
		"LookDirection",
		"LookPoint",
		"Player",
		"Resource",
		"ResourceData",
		"SpawnHistory",
		"Speed",
		"TerrainBounds",
		"Terrain",
		"TerrainData",
		"Ray",
		"UnitFraction",
		"Velocity",
		"LocalTimeScale",
		"FractionResourcesListener",
		"GameDestroyedListener",
		"GameStateListener",
		"LocalPositionListener",
		"LocalTimeScaleListener",
		"LookDirectionListener",
		"PositionListener",
		"RotationListener",
		"ScaleListener",
		"SpeedListener",
		"VelocityListener"
	};

	public static readonly System.Type[] ComponentTypes =
	{
		typeof(AttackListenerComponent),
		typeof(DeadListenerComponent),
		typeof(DeadRemovedListenerComponent),
		typeof(Ecs.Common.Components.CorePrefabComponent),
		typeof(Ecs.Common.Components.DestroyedComponent),
		typeof(Ecs.Common.Components.InstantiateComponent),
		typeof(Ecs.Common.Components.LinkComponent),
		typeof(Ecs.Common.Components.ResourcePrefabComponent),
		typeof(Ecs.Common.Components.UnitPrefabComponent),
		typeof(Ecs.Game.Components.AttackComponent),
		typeof(Ecs.Game.Components.CameraComponents.CameraComponent),
		typeof(Ecs.Game.Components.DeadComponent),
		typeof(Ecs.Game.Components.Fraction.FractionResourcesComponent),
		typeof(Ecs.Game.Components.Fraction.FractionTypeComponent),
		typeof(Ecs.Game.Components.GameStateComponent),
		typeof(Ecs.Game.Components.GlobalComponents.ActiveComponent),
		typeof(Ecs.Game.Components.GlobalComponents.LocalPositionComponent),
		typeof(Ecs.Game.Components.GlobalComponents.NavMeshAgentComponent),
		typeof(Ecs.Game.Components.GlobalComponents.PositionComponent),
		typeof(Ecs.Game.Components.GlobalComponents.RotationComponent),
		typeof(Ecs.Game.Components.GlobalComponents.ScaleComponent),
		typeof(Ecs.Game.Components.GlobalComponents.TransformComponent),
		typeof(Ecs.Game.Components.GlobalComponents.UidComponent),
		typeof(Ecs.Game.Components.LookDirectionComponent),
		typeof(Ecs.Game.Components.LookPointComponent),
		typeof(Ecs.Game.Components.PlayerComponents.PlayerComponent),
		typeof(Ecs.Game.Components.ResourceComponents.ResourceComponent),
		typeof(Ecs.Game.Components.ResourceComponents.ResourceDataComponent),
		typeof(Ecs.Game.Components.SpawnersComponents.SpawnHistoryComponent),
		typeof(Ecs.Game.Components.SpeedComponent),
		typeof(Ecs.Game.Components.TerrainComponents.TerrainBoundsComponent),
		typeof(Ecs.Game.Components.TerrainComponents.TerrainComponent),
		typeof(Ecs.Game.Components.TerrainComponents.TerrainDataComponent),
		typeof(Ecs.Game.Components.Units.RayComponent),
		typeof(Ecs.Game.Components.Units.UnitFractionComponent),
		typeof(Ecs.Game.Components.VelocityComponent),
		typeof(Ecs.Scheduler.Components.LocalTimeScaleComponent),
		typeof(FractionResourcesListenerComponent),
		typeof(GameDestroyedListenerComponent),
		typeof(GameStateListenerComponent),
		typeof(LocalPositionListenerComponent),
		typeof(LocalTimeScaleListenerComponent),
		typeof(LookDirectionListenerComponent),
		typeof(PositionListenerComponent),
		typeof(RotationListenerComponent),
		typeof(ScaleListenerComponent),
		typeof(SpeedListenerComponent),
		typeof(VelocityListenerComponent)
	};

	public static readonly Dictionary<Type, int> ComponentTypeToIndex = new Dictionary<Type, int>
	{
		{ typeof(AttackListenerComponent), 0 },
		{ typeof(DeadListenerComponent), 1 },
		{ typeof(DeadRemovedListenerComponent), 2 },
		{ typeof(Ecs.Common.Components.CorePrefabComponent), 3 },
		{ typeof(Ecs.Common.Components.DestroyedComponent), 4 },
		{ typeof(Ecs.Common.Components.InstantiateComponent), 5 },
		{ typeof(Ecs.Common.Components.LinkComponent), 6 },
		{ typeof(Ecs.Common.Components.ResourcePrefabComponent), 7 },
		{ typeof(Ecs.Common.Components.UnitPrefabComponent), 8 },
		{ typeof(Ecs.Game.Components.AttackComponent), 9 },
		{ typeof(Ecs.Game.Components.CameraComponents.CameraComponent), 10 },
		{ typeof(Ecs.Game.Components.DeadComponent), 11 },
		{ typeof(Ecs.Game.Components.Fraction.FractionResourcesComponent), 12 },
		{ typeof(Ecs.Game.Components.Fraction.FractionTypeComponent), 13 },
		{ typeof(Ecs.Game.Components.GameStateComponent), 14 },
		{ typeof(Ecs.Game.Components.GlobalComponents.ActiveComponent), 15 },
		{ typeof(Ecs.Game.Components.GlobalComponents.LocalPositionComponent), 16 },
		{ typeof(Ecs.Game.Components.GlobalComponents.NavMeshAgentComponent), 17 },
		{ typeof(Ecs.Game.Components.GlobalComponents.PositionComponent), 18 },
		{ typeof(Ecs.Game.Components.GlobalComponents.RotationComponent), 19 },
		{ typeof(Ecs.Game.Components.GlobalComponents.ScaleComponent), 20 },
		{ typeof(Ecs.Game.Components.GlobalComponents.TransformComponent), 21 },
		{ typeof(Ecs.Game.Components.GlobalComponents.UidComponent), 22 },
		{ typeof(Ecs.Game.Components.LookDirectionComponent), 23 },
		{ typeof(Ecs.Game.Components.LookPointComponent), 24 },
		{ typeof(Ecs.Game.Components.PlayerComponents.PlayerComponent), 25 },
		{ typeof(Ecs.Game.Components.ResourceComponents.ResourceComponent), 26 },
		{ typeof(Ecs.Game.Components.ResourceComponents.ResourceDataComponent), 27 },
		{ typeof(Ecs.Game.Components.SpawnersComponents.SpawnHistoryComponent), 28 },
		{ typeof(Ecs.Game.Components.SpeedComponent), 29 },
		{ typeof(Ecs.Game.Components.TerrainComponents.TerrainBoundsComponent), 30 },
		{ typeof(Ecs.Game.Components.TerrainComponents.TerrainComponent), 31 },
		{ typeof(Ecs.Game.Components.TerrainComponents.TerrainDataComponent), 32 },
		{ typeof(Ecs.Game.Components.Units.RayComponent), 33 },
		{ typeof(Ecs.Game.Components.Units.UnitFractionComponent), 34 },
		{ typeof(Ecs.Game.Components.VelocityComponent), 35 },
		{ typeof(Ecs.Scheduler.Components.LocalTimeScaleComponent), 36 },
		{ typeof(FractionResourcesListenerComponent), 37 },
		{ typeof(GameDestroyedListenerComponent), 38 },
		{ typeof(GameStateListenerComponent), 39 },
		{ typeof(LocalPositionListenerComponent), 40 },
		{ typeof(LocalTimeScaleListenerComponent), 41 },
		{ typeof(LookDirectionListenerComponent), 42 },
		{ typeof(PositionListenerComponent), 43 },
		{ typeof(RotationListenerComponent), 44 },
		{ typeof(ScaleListenerComponent), 45 },
		{ typeof(SpeedListenerComponent), 46 },
		{ typeof(VelocityListenerComponent), 47 }
	};

	/// <summary>
	/// Returns a component index based on the passed <paramref name="component"/> type; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="component"></param>
	public static int GetComponentIndex(IComponent component)
	{
		return GetComponentIndex(component.GetType());
	}

	/// <summary>
	/// Returns a component index based on the passed <paramref name="componentType"/>; where an index cannot be found
	/// -1 will be returned instead.
	/// </summary>
	/// <param name="componentType"></param>
	public static int GetComponentIndex(Type componentType)
	{
		return ComponentTypeToIndex.TryGetValue(componentType, out var index) ? index : -1;
	}
}
